% Example_tri_tri_line_plot.m
% Nasser June 19, 2019
clear;clc
% The data in the files:

% s_tri_0_pt.mat, Rs_tri_v_01_pt.mat
% Rs_tri_v_01_pt.mat, Rs_tri_v_02_pt.mat
% Rs_tri_h_01_pt.mat, Rs_tri_h_02_pt.mat

% s_tri_5_pt.mat, Rs_tri_v_51_pt.mat
% Rs_tri_v_51_pt.mat, Rs_tri_v_52_pt.mat
% Rs_tri_h_51_pt.mat, Rs_tri_h_52_pt.mat

% which has been generated by the MATLAB files:
% Example_tri_tri_line_save_0.m
% Example_tri_tri_line_save_5.m
% will be loaded in this file to plot Figure 12
% in the paper:
% E. Kalmoun, M. Nasser and M. Vuorinen, Numerical computation of Mityuk's
% function and radius for some canonical slit domains. 
% 
%
% loading the data files for the canonical domain: 
% the unit disk with a radial slit
% horizontal limit 
% 
%
x   =load('s_tri_0_pt.mat','-ascii');
%% 
R0h1=load('Rs_tri_h_01_pt.mat','-ascii');
R5h1=load('Rs_tri_h_51_pt.mat','-ascii');

figure
hold on
box on
plot(x,R0h1,'b','LineWidth',1.5)
plot(x,R5h1,'r','LineWidth',1.5)

legend({'$\theta_1=0$','$\theta_1=\pi/2$'},'FontSize',15,'Interpreter','latex','Location','northwest');

xlabel('{$x$}','FontSize',18,'Interpreter','latex');
ylabel('{$R(G,x+{\rm i})$}','FontSize',18,'Interpreter','latex');

set(gca,'XTick',[0:1:5],'FontSize',18);
set(gca,'YTick',[0:1:5]);

grid(gca,'minor')
ax=gca;
ax.MinorGridAlpha = 1;

axis([0 5 0 5])
set(gca,'LooseInset',get(gca,'TightInset'))

% axis equal
% axis off
print -depsc fig_tritri_h1_L
% print -dpdf  fig_tritri_h1_L
%%
R0h2=load('Rs_tri_h_02_pt.mat','-ascii');
R5h2=load('Rs_tri_h_52_pt.mat','-ascii');

figure
hold on
box on
plot(x,R0h2,'b','LineWidth',1.5)
plot(x,R5h2,'r','LineWidth',1.5)

legend({'$\theta_1=0$','$\theta_1=\pi/2$'},'FontSize',15,'Interpreter','latex','Location','northwest');

xlabel('{$x$}','FontSize',18,'Interpreter','latex');
ylabel('{$R(G,x+3{\rm i})$}','FontSize',18,'Interpreter','latex');

set(gca,'XTick',[0:1:5],'FontSize',18);
set(gca,'YTick',[0:1:5]);

grid(gca,'minor')
ax=gca;
ax.MinorGridAlpha = 1;

axis([0 5 0 5])
set(gca,'LooseInset',get(gca,'TightInset'))

% axis equal
% axis off
print -depsc fig_tritri_h2_L
% print -dpdf  fig_tritri_h2_L
%%
R0v1=load('Rs_tri_v_01_pt.mat','-ascii');
R5v1=load('Rs_tri_v_51_pt.mat','-ascii');

figure
hold on
box on
plot(x,R0v1,'b','LineWidth',1.5)
plot(x,R5v1,'r','LineWidth',1.5)

legend({'$\theta_1=0$','$\theta_1=\pi/2$'},'FontSize',15,'Interpreter','latex','Location','northwest');

xlabel('{$y$}','FontSize',18,'Interpreter','latex');
ylabel('{$R(G,3+y{\rm i})$}','FontSize',18,'Interpreter','latex');

set(gca,'XTick',[0:1:5],'FontSize',18);
set(gca,'YTick',[0:1:5]);

grid(gca,'minor')
ax=gca;
ax.MinorGridAlpha = 1;

axis([0 5 0 5])
set(gca,'LooseInset',get(gca,'TightInset'))

% axis equal
% axis off
print -depsc fig_tritri_v1_L
% print -dpdf  fig_tritri_v1_L
%
%%
R0v2=load('Rs_tri_v_02_pt.mat','-ascii');
R5v2=load('Rs_tri_v_52_pt.mat','-ascii');

figure
hold on
box on
plot(x,R0v2,'b','LineWidth',1.5)
plot(x,R5v2,'r','LineWidth',1.5)

legend({'$\theta_1=0$','$\theta_1=\pi/2$'},'FontSize',15,'Interpreter','latex','Location','northwest');

xlabel('{$y$}','FontSize',18,'Interpreter','latex');
ylabel('{$R(G,4+y{\rm i})$}','FontSize',18,'Interpreter','latex');

set(gca,'XTick',[0:1:5],'FontSize',18);
set(gca,'YTick',[0:1:7]);

grid(gca,'minor')
ax=gca;
ax.MinorGridAlpha = 1;

axis([0 5 0 7])
set(gca,'LooseInset',get(gca,'TightInset'))

% axis equal
% axis off
print -depsc fig_tritri_v2_L
% print -dpdf  fig_tritri_v2_L
%
% 
% 
%%
n        =   3*2^13
t        =  (0:2*pi/n:2*pi-2*pi/n).';
% The parametization of the rectangle boundary
out_ver    = [0    ; 5    ; 4+5i ]; % Vertices of the outer triangle
in_ver     = [3+3i ; 4+3i ; 3+i  ]; % Vertices of the iner triangle
[et(1:n,1)     , etp(1:n,1)     ] = polygonp(out_ver,n/length(out_ver));
[et(n+1:2*n,1) , etp(n+1:2*n,1) ] = polygonp(in_ver,n/length(in_ver));
%
s    = [0:0.0025:5];
zv1  =  3+i*s;  
[in1 on1] = inpolygon(real(zv1),imag(zv1),real(out_ver),imag(out_ver));
zv1(~in1)=NaN+i*NaN; 
zv1(on1) =NaN+i*NaN;
[in1 on1] = inpolygon(real(zv1),imag(zv1),real(in_ver),imag(in_ver));
zv1(in1)=NaN+i*NaN; 
zv1(on1)=NaN+i*NaN;
sum(sum(abs(zv1)>=0))
%
zv2  =  4+i*s; 
[in2 on2] = inpolygon(real(zv2),imag(zv2),real(out_ver),imag(out_ver));
zv2(~in2)=NaN+i*NaN; 
zv2(on2) =NaN+i*NaN;
[in2 on2] = inpolygon(real(zv2),imag(zv2),real(in_ver),imag(in_ver));
zv2(in2)=NaN+i*NaN; 
zv2(on2)=NaN+i*NaN;
sum(sum(abs(zv2)>=0))
%
zh1  =  s+i;  
[in1 on1] = inpolygon(real(zh1),imag(zh1),real(out_ver),imag(out_ver));
zh1(~in1)=NaN+i*NaN; 
zh1(on1) =NaN+i*NaN;
[in1 on1] = inpolygon(real(zh1),imag(zh1),real(in_ver),imag(in_ver));
zh1(in1)=NaN+i*NaN; 
zh1(on1)=NaN+i*NaN;
sum(sum(abs(zh1)>=0))
%
zh2  =  s+3i; 
[in2 on2] = inpolygon(real(zh2),imag(zh2),real(out_ver),imag(out_ver));
zh2(~in2)=NaN+i*NaN; 
zh2(on2) =NaN+i*NaN;
[in2 on2] = inpolygon(real(zh2),imag(zh2),real(in_ver),imag(in_ver));
zh2(in2)=NaN+i*NaN; 
zh2(on2)=NaN+i*NaN;
sum(sum(abs(zh2)>=0))
% 
%
figure
hold on
box on
plot(real(zv1),imag(zv1),'r','LineWidth',1.5)
plot(real(zv2),imag(zv2),'g','LineWidth',1.5)
plot(real(zh1),imag(zh1),'m','LineWidth',1.5)
plot(real(zh2),imag(zh2),'b','LineWidth',1.5)
plot(real(et(1:n,1)),imag(et(1:n,1)),'k','LineWidth',1.5)
plot(real(et(n+1:2*n,1)),imag(et(n+1:2*n,1)),'k','LineWidth',1.5)
legend({'{$3+{\rm i}y$}','{$4+{\rm i}y$}','{$x+{\rm i}$}','{$x+3{\rm i}$}'},'FontSize',15,'Interpreter','latex','Location','northwest');

set(gca,'XTick',[0:1:5],'FontSize',18);
set(gca,'YTick',[0:1:7]);

grid(gca,'minor')
ax=gca;
ax.MinorGridAlpha = 1;

axis equal
axis([-0.01  5.01 -0.01  5.01])
set(gca,'LooseInset',get(gca,'TightInset'))

% axis equal
% axis off
print -depsc fig_tritri_L
% print -dpdf  fig_tritri_L
%